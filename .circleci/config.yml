set_dock_env: &set_dock_env
    environment:
        IMAGE_NAME: "uva-hva.gitlab.host:4567/r.helmus/patroon/patroonrs"
        DOCKER_BUILDKIT: 1
        BUILDKIT_PROGRESS: plain

version: 2.1

jobs:
    build:
        machine:
            image: ubuntu-2004:202111-02
        resource_class: large
        <<: *set_dock_env
        steps:
            - checkout
            - run:
                name: Build Docker image
                no_output_timeout: 30m
                command: |
                    echo "$GL_PASS" | docker login uva-hva.gitlab.host:4567 -u "$GL_USER" --password-stdin
                    docker build --cache-from "${IMAGE_NAME}" --tag "${IMAGE_NAME}" --build-arg BUILDKIT_INLINE_CACHE=1 --file ./docker/rstudio/Dockerfile .
            - run:
                name: Push Docker image
                command: |
                    git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                    docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${git_sha}-${CIRCLE_BRANCH}"
                    docker push "${IMAGE_NAME}:${git_sha}-${CIRCLE_BRANCH}"
    test:
        machine:
            image: ubuntu-2004:202111-02
        resource_class: large
        <<: *set_dock_env
        steps:
            - run:
                name: Perform tests
                command: |
                    echo "$GL_PASS" | docker login uva-hva.gitlab.host:4567 -u "$GL_USER" --password-stdin
                    git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                    docker run --name patroon -t "${IMAGE_NAME}:${git_sha}-${CIRCLE_BRANCH}" /bin/bash -c "cd patRoon; Rscript docker/run_tests.R"
            - run:
                name: Copy test results
                when: always
                command: |
                    CONTAINER_ID=`docker ps -aqf "name=patroon"`
                    mkdir /tmp/tests
                    docker cp $CONTAINER_ID:/home/rstudio/junit.xml /tmp/tests/
                    cat /tmp/tests/junit.xml
            - store_test_results:
                path: /tmp/tests
            - store_artifacts:
                path: /tmp/tests
            - deploy:
                name: Push Docker image as latest
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                        docker tag "${IMAGE_NAME}:${git_sha}-master" "${IMAGE_NAME}:latest"
                        docker push "${IMAGE_NAME}:latest"
                    fi
    docs:
        machine:
            image: ubuntu-2004:202111-02
        resource_class: large
        <<: *set_dock_env
        steps:
            - checkout
            - add_ssh_keys:
                fingerprints:
                    - "9a:18:88:f8:04:fe:25:3b:8f:6e:23:d7:fd:d4:46:b8"
            - run:
                name: Generate docs & site
                no_output_timeout: 60m
                command: |
                    echo "$GL_PASS" | docker login uva-hva.gitlab.host:4567 -u "$GL_USER" --password-stdin
                    git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                    docker run --name patroon -t "${IMAGE_NAME}:${git_sha}-${CIRCLE_BRANCH}" /bin/bash -c "cd patRoon; Rscript docker/make_docs.R"
                    CONTAINER_ID=`docker ps -aqf "name=patroon"`
                    rm -rf docs
                    docker cp $CONTAINER_ID:/home/rstudio/patRoon/docs docs
                    touch docs/.nojekyll
                    git config --global user.email "something@email.com"
                    git config --global user.name "CircleCI updater"
                    git add docs
                    git status
                    git commit -m "automatic site/doc update [skip ci]"
                    git push origin ${CIRCLE_BRANCH}
    cov:
        machine:
            image: ubuntu-2004:202111-02
        resource_class: large
        <<: *set_dock_env
        steps:
            - checkout
            - add_ssh_keys:
                fingerprints:
                    - "9a:18:88:f8:04:fe:25:3b:8f:6e:23:d7:fd:d4:46:b8"
            - run:
                name: Run coverage
                no_output_timeout: 60m
                command: |
                    echo "$GL_PASS" | docker login uva-hva.gitlab.host:4567 -u "$GL_USER" --password-stdin
                    git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                    docker run -e CODECOV_TOKEN -e CI -e CIRCLECI -e CIRCLE_BRANCH -e CIRCLE_BUILD_NUM -e CIRCLE_PROJECT_USERNAME -e CIRCLE_PROJECT_REPONAME -e CIRCLE_PR_NUMBER -e CIRCLE_SHA1 --name patroon -t "${IMAGE_NAME}:${git_sha}-${CIRCLE_BRANCH}" /bin/bash -c "cd patRoon; Rscript docker/run_covr.R"
    deps:
        machine:
            image: ubuntu-2004:202111-02
        resource_class: large
        environment:
            DOCKER_BUILDKIT: 1
            BUILDKIT_PROGRESS: plain
            #IMAGE_NAME_DEPS: "patroonorg/patroondeps"
            IMAGE_NAME_DEPS: "uva-hva.gitlab.host:4567/r.helmus/patroon/patroondeps"
        steps:
            - checkout
            - run:
                name: Build Docker image
                no_output_timeout: 30m
                command: |
                    echo "$GL_PASS" | docker login uva-hva.gitlab.host:4567 -u "$GL_USER" --password-stdin
                    docker build --cache-from "${IMAGE_NAME_DEPS}" --tag "${IMAGE_NAME_DEPS}" --build-arg BUILDKIT_INLINE_CACHE=1 --file ./docker/deps/Dockerfile .
            - run:
                name: Push Docker image
                command: |
                    git_sha=`echo $CIRCLE_SHA1 | cut -c1-7`
                    docker tag "${IMAGE_NAME_DEPS}" "${IMAGE_NAME_DEPS}:${git_sha}-${CIRCLE_BRANCH}"
                    docker push "${IMAGE_NAME_DEPS}:${git_sha}-${CIRCLE_BRANCH}"
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        docker push "${IMAGE_NAME_DEPS}:latest"
                    else
                        docker tag "${IMAGE_NAME_DEPS}" "${IMAGE_NAME_DEPS}:${CIRCLE_BRANCH}"
                        docker push "${IMAGE_NAME_DEPS}:${CIRCLE_BRANCH}"
                    fi

parameters:
    do_trigger_deps:
        type: boolean
        default: false


workflows:
    version: 2.1
    builddeps:
        jobs:
            - deps
        triggers:
            - schedule:
                cron: "0 2 * * 0,2,4,6"
                filters:
                    branches:
                        only:
                            - master
    builddeps_trigger:
        when: << pipeline.parameters.do_trigger_deps >>
        jobs:
            - deps
    btd:
        unless: << pipeline.parameters.do_trigger_deps >>
        jobs:
            - build
            - test:
                requires:
                    - build
            - docs:
                requires:
                    - build
            - cov:
                requires:
                    - build
