% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adduct.R
\docType{class}
\name{adduct-class}
\alias{adduct-class}
\alias{adduct}
\alias{show,adduct-method}
\alias{as.character,adduct-method}
\title{Generic adduct class}
\usage{
adduct(...)

\S4method{show}{adduct}(object)

\S4method{as.character}{adduct}(x, format = "generic", err = TRUE)
}
\arguments{
\item{x, object}{An \code{adduct} object.}

\item{format}{A \code{character} that specifies the source format.

  \code{"generic"} is an internally used generic format that supports full
  textual conversion. Examples: \code{"[M+H]+"}, \code{"[2M+H]+"},
  \code{"[M+3H]3+"}.

  \code{"sirius"} Is the format used by \command{SIRIUS}. It is similar to
  \code{generic} but does not allow multiple charges/molecules. See the
  SIRIUS manual for more details.

  \code{"genform"} and \code{"metfrag"} support fixed types of adducts
  which can be obtained with the \code{GenFormAdducts} and
  \code{MetFragAdducts} functions, respectively.
  
  \code{"openms"} is the format used by the \command{MetaboliteAdductDecharger} tool.
  
  \code{"cliquems"} is the format used by \pkg{cliqueMS}.}

\item{err}{If \code{TRUE} then an error will be thrown if conversion fails,
otherwise returns without data.}

\item{\dots}{Any of \code{add}, \code{sub}, \code{molMult} and/or \code{charge}. See \verb{Slots}.}
}
\description{
Objects from this class are used to specify adduct information in an
algorithm independent way.
}
\section{Methods (by generic)}{
\itemize{
\item \code{show(adduct)}: Shows summary information for this object.

\item \code{as.character(adduct)}: Converts an \code{adduct} object to a specified
\code{character} format.

}}
\section{Slots}{

\describe{
\item{\code{add,sub}}{A \code{character} with one or more formulas to add/subtract.}

\item{\code{molMult}}{How many times the original molecule is present in this
molecule (\emph{e.g.} for a dimer this would be \samp{2}). Default is \samp{1}.}

\item{\code{charge}}{The final charge of the adduct (default \samp{1}).}
}}

\examples{
adduct("H") # [M+H]+
adduct(sub = "H", charge = -1) # [M-H]-
adduct(add = "K", sub = "H2", charge = -1) # [M+K-H2]+
adduct(add = "H3", charge = 3) # [M+H3]3+
adduct(add = "H", molMult = 2) # [2M+H]+

as.character(adduct("H")) # returns "[M+H]+"

}
\seealso{
\code{\link{as.adduct}} for easy creation of \code{adduct} objects
  and \link[=adduct-utils]{adduct utilities} for other adduct functionality.
}
