% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components-tps.R
\docType{class}
\name{componentsTPs-class}
\alias{componentsTPs-class}
\alias{componentsTPs}
\alias{as.data.table,componentsTPs-method}
\alias{filter,componentsTPs-method}
\alias{plotGraph,componentsTPs-method}
\title{Components based on parent and transformation product (TP) linkage.}
\usage{
\S4method{as.data.table}{componentsTPs}(x)

\S4method{filter}{componentsTPs}(
  obj,
  ...,
  retDirMatch = FALSE,
  minSpecSim = NULL,
  minSpecSimPrec = NULL,
  minSpecSimBoth = NULL,
  minFragMatches = NULL,
  minNLMatches = NULL,
  formulas = NULL,
  verbose = TRUE,
  negate = FALSE
)

\S4method{plotGraph}{componentsTPs}(obj, onlyLinked = TRUE)
}
\arguments{
\item{x, obj}{A \code{componentsTPs} object.}

\item{\dots, verbose}{Further arguments passed to the base \code{\link[=filter,components-method]{filter method}}.}

\item{retDirMatch}{If set to \code{TRUE}, only keep TPs for which the retention time direction (\code{retDir}, see
Details in \link{componentsTPs}) matches with the observed direction. TPs will never be removed if the
expected/observed direction is \samp{0} (\emph{i.e.} unknown or not significantly different than the parent).}

\item{minSpecSim, minSpecSimPrec, minSpecSimBoth}{The minimum spectral similarity of a TP compared to its parent
(\samp{0-1}). The \code{minSpecSimPrec} and \code{minSpecSimBoth} apply to binned data that is shifted with the
\code{"precursor"} and \code{"both"} method, respectively (see \link[=specSimParams]{MS spectral similarity
parameters} for more details). Set to \code{NULL} to ignore.}

\item{minFragMatches, minNLMatches}{Minimum number of parent/TP fragment and neutral loss matches, respectively. Set
to \code{NULL} to ignore. See the \verb{Linking parents and transformation products} section in
\code{\link{generateComponentsTPs}} for more details.}

\item{formulas}{A \code{\link{formulas}} object. The formula annotation data in this object is to verify if elemental
additions/subtractions from metabolic logic reactions are possible (hence, it only works with data from
\code{\link{generateTPsLogic}}). To verify elemental additions, only TPs with at least one candidate formula that
has these elements are kept. Similarly, for elemental subtractions, any of the parent candidate formulae must
contain the subtraction elements. Note that TPs are currently not filtered if either the parent or the TP has no
formula annotations. Set to \code{NULL} to ignore.}

\item{negate}{If \code{TRUE} then filters are applied in opposite manner.}

\item{onlyLinked}{If \code{TRUE} then only components with links are plotted.}
}
\value{
\code{filter} returns a filtered \code{componentsTPs} object.

\code{plotGraph} returns the result of \code{\link{visNetwork}}.
}
\description{
This class is derived from \code{\link{components}} and is used to store components that result from linking feature
groups that are (predicted to be) parents with feature groups that (are predicted to be) transformation products. For
more details, see \code{\link{generateComponentsTPs}}.
}
\section{Methods (by generic)}{
\itemize{
\item \code{as.data.table(componentsTPs)}: Returns all component data as a \code{\link{data.table}}.

\item \code{filter(componentsTPs)}: Provides various rule based filtering options to clean and prioritize TP data.

\item \code{plotGraph(componentsTPs)}: Plots an interactive network graph for linked components. Components are linked with each
other if one or more transformation products overlap. The graph is constructed with the \pkg{\link{igraph}} package
and rendered with \pkg{\link{visNetwork}}.

}}
\note{
The intensity values for components (used by \code{plotSpectrum}) are set
  to a dummy value (1) as no single intensity value exists for this kind of
  components.
}
\section{S4 class hierarchy}{
 \itemize{   \item{\code{\link{components}}}   \itemize{     \item{\strong{\code{\link{componentsTPs}}}}   } }
}

\references{
\addCitations{igraph}{1}
}
\seealso{
\code{\link{components}} for other relevant methods and \code{\link{generateComponents}}
}
