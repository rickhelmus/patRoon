% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compounds.R
\name{generateCompounds}
\alias{generateCompounds}
\alias{generateCompounds,featureGroups-method}
\title{Automatic compound annotation}
\usage{
\S4method{generateCompounds}{featureGroups}(fGroups, MSPeakLists, algorithm, ...)
}
\arguments{
\item{fGroups}{\code{\link{featureGroups}} object which should be annotated. This should be the same or a subset of
the object that was used to create the specified \code{MSPeakLists}. In the case of a subset only the remaining
feature groups in the subset are considered.}

\item{MSPeakLists}{A \code{\link{MSPeakLists}} object that was generated for the supplied \code{fGroups}.}

\item{algorithm}{A character string describing the algorithm that should be
used: \code{"metfrag"}, \code{"sirius"}, \code{"library"}}

\item{\dots}{Any parameters to be passed to the selected compound generation algorithm.}
}
\value{
A \code{\link{compounds}} derived object containing all compound annotations.
}
\description{
Automatically perform chemical compound annotation for feature groups.
}
\details{
Several algorithms are provided to automatically perform compound annotation for feature groups. To this end,
measured masses for all feature groups are searched within online database(s) (\emph{e.g.}
\href{https://pubchem.ncbi.nlm.nih.gov/}{PubChem}) to retrieve a list of potential candidate chemical compounds.
Depending on the algorithm and its parameters, further scoring of candidates is then performed using, for instance,
matching of measured and theoretical isotopic patterns, presence within other data sources such as patent databases
and similarity of measured and in-silico predicted MS/MS fragments. Note that this process is often quite time
consuming, especially for large feature group sets. Therefore, this is often one of the last steps within the
workflow and not performed before feature groups have been prioritized.

\code{generateCompounds} is a generic function that will generateCompounds by one of the supported algorithms. The actual
  functionality is provided by algorithm specific functions such as \code{generateCompoundsMetFrag} and \code{generateCompoundsSIRIUS}. While these
  functions may be called directly, \code{generateCompounds} provides a generic interface and is therefore usually preferred.
}
\section{Scorings}{
 Each algorithm implements their own scoring system. Their names have been simplified and
  harmonized where possible. The \code{\link{compoundScorings}} function can be used to get an overview of both the
  algorithm specific and generic scoring names.
}

\section{Sets workflows}{
 With a \link[=sets-workflow]{sets workflow}, annotation is first performed for each set.
  This is important, since the annotation algorithms typically cannot work with data from mixed ionization modes. The
  annotation results are then combined to generate a \emph{sets consensus}: \itemize{

  \item The annotation tables for each feature group from the set specific data are combined. Rows with overlapping
  candidates (determined by the first-block \acronym{InChIKey}) are merged.

  \item Set specific data (\emph{e.g.} the ionic formula) is retained by renaming their columns with set specific
  names.

  \item The MS/MS fragment annotations (\code{fragInfo} column) from each set are combined.

  \item The scorings for each set are averaged to calculate overall scores. if \code{setAvgSpecificScores=FALSE} then
  scorings that are considered set specific (\emph{e.g.} MS/MS and isotopic pattern match) are \emph{not} averaged.

  \item The candidates are re-ranked based on their average ranking among the set data (if a candidate is absent in a
  set it is assigned the poorest rank in that set).

  \item The coverage of each candidate among sets is calculated. Depending on the \code{setThreshold} and
  \code{setThresholdAnn} arguments, candidates with low abundance are removed.

  }
}

\seealso{
The \code{\link{compounds}} output class and its methods and the algorithm specific functions:
  \code{\link{generateCompoundsMetFrag}}, \code{\link{generateCompoundsSIRIUS}}, \code{\link{generateCompoundsLibrary}}
}
