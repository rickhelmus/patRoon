% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formulas.R
\name{generateFormulas}
\alias{generateFormulas}
\alias{generateFormulas,featureGroups-method}
\title{Automatic chemical formula generation}
\usage{
\S4method{generateFormulas}{featureGroups}(fGroups, MSPeakLists, algorithm, ...)
}
\arguments{
\item{fGroups}{\code{\link{featureGroups}} object for which formulae should be generated. This should be the same or
a subset of the object that was used to create the specified \code{MSPeakLists}. In the case of a subset only the
remaining feature groups in the subset are considered.}

\item{MSPeakLists}{An \code{\link{MSPeakLists}} object that was generated for the supplied \code{fGroups}.}

\item{algorithm}{A character string describing the algorithm that should be
used: \code{"bruker"}, \code{"genform"}, \code{"sirius"}}

\item{\dots}{Any parameters to be passed to the selected formula generation algorithm.}
}
\value{
A \code{\link{formulas}} object containing all generated formulae.
}
\description{
Automatically calculate chemical formulae for all feature groups.
}
\details{
Several algorithms are provided to automatically generate formulae for given feature groups. All algorithms use the
accurate mass of a feature to back-calculate candidate formulae. Depending on the algorithm and data availability,
other data such as isotopic pattern and MS/MS fragments may be used to further improve formula assignment and
ranking.

\code{generateFormulas} is a generic function that will generateFormulas by one of the supported algorithms. The actual
  functionality is provided by algorithm specific functions such as \code{generateFormulasDA} and \code{generateFormulasGenForm}. While these
  functions may be called directly, \code{generateFormulas} provides a generic interface and is therefore usually preferred.
}
\section{Candidate assignment}{
 Formula candidate assignment occurs in one of the following ways: \itemize{

  \item Candidates are first generated for each feature and then pooled to form consensus candidates for the feature
  group.

  \item Candidates are directly generated for each feature group by group averaged MS peak list data.

  }

  With approach (1), scorings and mass errors are averaged and outliers are removed (controlled by
  \code{featThreshold} and \code{featThresholdAnn} arguments). Other candidate properties that cannot be averaged are
  from the feature from the analysis as specified in the \code{"analysis"} column of the results. The second approach only generates candidate formulae once for every feature group, and is therefore generally much
  faster. However, this inherently prevents removal of outliers.

  Note that with either approach subsequent workflow steps that use formula data (\emph{e.g.}
  \code{\link{addFormulaScoring}} and \link{reporting} functions) only use formula data that was eventually assigned
  to feature groups.
}

\section{Scorings}{
 Each algorithm implements their own scoring system. Their names have been harmonized where
  possible. An overview is obtained with the \code{\link{formulaScorings}} function:
  \Sexpr[results=rd,echo=FALSE,stage=build]{patRoon:::tabularRD(patRoon::formulaScorings())}
}

\section{Sets workflows}{
 With a \link[=sets-workflow]{sets workflow}, annotation is first performed for each set.
  This is important, since the annotation algorithms typically cannot work with data from mixed ionization modes. The
  annotation results are then combined to generate a \emph{sets consensus}: \itemize{

  \item The annotation tables for each feature group from the set specific data are combined. Rows with overlapping
  candidates (determined by the neutral formula) are merged.

  \item Set specific data (\emph{e.g.} the ionic formula) is retained by renaming their columns with set specific
  names.

  \item The MS/MS fragment annotations (\code{fragInfo} column) from each set are combined.

  \item The scorings for each set are averaged to calculate overall scores. if \code{setAvgSpecificScores=FALSE} then
  scorings that are considered set specific (\emph{e.g.} MS/MS and isotopic pattern match) are \emph{not} averaged.

  \item The candidates are re-ranked based on their average ranking among the set data (if a candidate is absent in a
  set it is assigned the poorest rank in that set).

  \item The coverage of each candidate among sets is calculated. Depending on the \code{setThreshold} and
  \code{setThresholdAnn} arguments, candidates with low abundance are removed.

  }
}

\seealso{
The \code{\link{formulas}} output class and its methods and the algorithm specific functions:
  \code{\link{generateFormulasDA}}, \code{\link{generateFormulasGenForm}}, \code{\link{generateFormulasSIRIUS}}

The \href{https://www.researchgate.net/publication/307964728_MOLGEN-MSMS_Software_User_Manual}{GenForm
  manual} (also known as MOLGEN-MSMS).
}
