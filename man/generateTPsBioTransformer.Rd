% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TP-biotransformer.R
\name{generateTPsBioTransformer}
\alias{generateTPsBioTransformer}
\title{Obtain transformation products (TPs) with BioTransformer}
\usage{
generateTPsBioTransformer(
  parents,
  type = "env",
  generations = 2,
  maxExpGenerations = generations + 2,
  extraOpts = NULL,
  skipInvalid = TRUE,
  prefCalcChemProps = TRUE,
  neutralChemProps = FALSE,
  neutralizeTPs = TRUE,
  calcSims = FALSE,
  fpType = "extended",
  fpSimMethod = "tanimoto",
  MP = FALSE
)
}
\arguments{
\item{parents}{The parents for which transformation products should be obtained. This can be (1) a suspect list (see
\link[=suspect-screening]{suspect screening} for more information), (2) the resulting output of
\code{\link{screenSuspects}} or (3) a \code{\link{compounds}} annotation object. In the former two cases, the
suspect (hits) are used as parents, whereas in the latter case all candidates are used as parents.}

\item{type}{The type of prediction. Valid values are: \code{"env"}, \code{"ecbased"}, \code{"cyp450"},
\code{"phaseII"}, \code{"hgut"}, \code{"superbio"}, \code{"allHuman"}. Sets the \command{-b} command line option.}

\item{generations}{The number of generations (steps) for the predictions. Sets the \command{-s} command line option.
More generations may be reported, see the \verb{Hierarchy expansion} section below.}

\item{maxExpGenerations}{The maximum number of generations during hierarchy expansion, see below.}

\item{extraOpts}{A \code{character} with extra command line options passed to the \command{biotransformer.jar} tool.}

\item{skipInvalid}{If set to \code{TRUE} then the parents will be skipped (with a warning) for which insufficient
information (\emph{e.g.} SMILES) is available.}

\item{prefCalcChemProps}{If \code{TRUE} then calculated chemical properties such as the formula and
\acronym{InChIKey} are preferred over what is already present in the parent suspect list. For efficiency reasons it is
recommended to set this to \code{TRUE}. See the \verb{Validating and calculating chemical properties} section for
more details.}

\item{neutralChemProps}{If \code{TRUE} then the neutral form of the molecule is considered to calculate
\acronym{SMILES}, formulae etc. Enabling this may improve feature matching when considering common adducts
(\emph{e.g.} \code{[M+H]+}, \code{[M-H]-}). See the \verb{Validating and calculating chemical properties} section
for more details.}

\item{neutralizeTPs}{If \code{TRUE} then all resulting TP structure information is neutralized. This argument has a
similar meaning as \code{neutralChemProps}. This is defaulted to \code{TRUE} for prediction algorithms, as these
may output charged molecules. \strong{NOTE:} if neutrlization results in duplicate TPs, \emph{i.e.} when the
neutral form of the TP was also generated by the algorithm, then the neutralized TP \emph{will be removed}.}

\item{calcSims}{If set to \code{TRUE} then structural similarities between the parent and its TPs are calculated. A
minimum similarity can be obtained by using the \link[=filter,transformationProductsStructure-method]{filter
method}. May be useful under the assumption that parents and TPs who have a high structural similarity, also likely
have a high MS/MS spectral similarity (which can be evaluated after componentization with
\code{\link{generateComponentsTPs}}).}

\item{fpType}{The type of structural fingerprint that should be calculated. See the \code{type} argument of the
\code{\link{get.fingerprint}} function of \CRANpkg{rcdk}.}

\item{fpSimMethod}{The method for calculating similarities (i.e. not dissimilarity!). See the \code{method} argument
of the \code{\link{fp.sim.matrix}} function of the \CRANpkg{fingerprint} package.}

\item{MP}{If \code{TRUE} then multiprocessing is enabled. Since \command{BioTransformer} supports native
parallelization, additional multiprocessing generally doesn't lead to significant reduction in computational times.
Furthermore, enabling multiprocessing can lead to very high CPU/RAM usage.}
}
\value{
The TPs are stored in an object derived from the \code{\link{transformationProductsStructure}} class.
}
\description{
Uses \href{http://biotransformer.ca/}{BioTransformer} to predict TPs
}
\details{
This function uses BioTransformer to obtain transformation products. This function is called when calling \code{generateTPs} with
  \code{algorithm="biotransformer"}.

In order to use this function the \file{.jar} command line utility should be installed and specified in the
  \code{\link[=patRoon-package]{patRoon.path.BioTransformer}} option. The \file{.jar} file can be obtained via
  \url{https://bitbucket.org/djoumbou/biotransformer/src/master}.

An important advantage of this algorithm is that it provides structural information for generated TPs.
  However, this also means that if the input is from a parent suspect list or screening then either \acronym{SMILES}
  or \acronym{InChI} information must be available for the parents.
}
\note{
When the \code{parents} argument is a \code{\link{compounds}} object, the candidate library \code{identifier}
  is used in case the candidate has no defined \code{compoundName}.
}
\section{Hierarchy expansion}{
 \command{BioTransformer} only reports the direct parent for a TP, not
  the complete pathway. For instance, consider the following results: \itemize{

  \item parent --> TP1

  \item parent --> TP2

  \item TP1 --> TP2

  \item TP2 --> TP3

  }
  
  In this case, TP3 may be formed either as: \itemize{
  
  \item parent --> TP1 --> TP2 --> TP3
  
  \item parent --> TP2 --> TP3
  
  }
  
  For this reason, \pkg{patRoon} simply expands the hierarchy and assumes that all routes are possible. For instance,
  \verb{
     Parent    
     /-  -\    
   /-      -\  
  -          - 
 TP1        TP2
  |          | 
  |          | 
 TP2        TP3
  |            
  |            
 TP3
  }
  
  Note that this may result in pathways with more generations than defined by the \code{generations} argument. Thus,
  the \code{maxExpGenerations} argument is used to avoid excessive expansions.
}

\section{Validating and calculating chemical properties}{
 Chemical properties such as \acronym{SMILES},
  \acronym{InChIKey} and formula in the parent suspect list are automatically validated and calculated if missing/invalid.

  The internal validation/calculation process performs the following steps: \itemize{

  \item Validation of \acronym{SMILES}, \acronym{InChI}, \acronym{InChIKey} and formula data (if present). Invalid
  entries will be set to \code{NA}.

  \item If \code{neutralChemProps=TRUE} then chemical data (\acronym{SMILES}, formulae etc.) is neutralized by
  (de-)protonation (using the \command{--neutralized} option of \command{OpenBabel}). An additional column
  \code{molNeutralized} is added to mark those molecules that were neutralized. Note that neutralization requires
  either \acronym{SMILES} or \acronym{InChI} data to be available.

  \item The \acronym{SMILES} and \acronym{InChI} data are used to calculate missing or invalid \acronym{SMILES},
  \acronym{InChI}, \acronym{InChIKey} and formula data. If \code{prefCalcChemProps=TRUE} then existing
  \acronym{InChIKey} and formula data is overwritten by calculated values whenever possible.

  \item The chemical formulae which were \emph{not} calculated are verified and normalized. This process may be time
  consuming, and is potentially largely avoided by setting \code{prefCalcChemProps=TRUE}.

  \item Neutral masses are calculated for missing values (\code{prefCalcChemProps=FALSE}) or whenever possible
  (\code{prefCalcChemProps=TRUE}).

  }

  Note that calculation of formulae for molecules that are isotopically labelled is currently only supported for
  deuterium (2H) elements.

  This functionality relies heavily on \href{http://openbabel.org/wiki/Main_Page}{OpenBabel}, please make sure it is
  installed.
}

\section{Parallelization}{
 \code{generateTPsBioTransformer} uses multiprocessing to parallelize
  computations. Please see the parallelization section in the handbook for
  more details and \link[=patRoon-package]{patRoon options} for configuration
  options.
}

\references{
\addCitations{rcdk}{1}

\insertRef{OBoyle2011}{patRoon}

\insertRef{DjoumbouFeunang2019}{patRoon} \cr\cr \insertRef{Wicker2015}{patRoon}
}
\seealso{
\code{\link{generateTPs}} for more details and other algorithms.
}
