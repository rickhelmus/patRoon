% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mslibrary-msp.R
\name{loadMSLibraryMSP}
\alias{loadMSLibraryMSP}
\title{Load MS library data from MSP files}
\source{
Guessing adducts from neutral/ionic mass differences was inspired from
  \href{http://ipb-halle.github.io/MetFrag/}{MetFrag}.
}
\usage{
loadMSLibraryMSP(
  file,
  parseComments = TRUE,
  prefCalcChemProps = TRUE,
  neutralChemProps = FALSE,
  potAdducts = TRUE,
  potAdductsLib = TRUE,
  absMzDev = 0.002,
  calcSPLASH = TRUE
)
}
\arguments{
\item{file}{A \code{character} string that specifies the file path to the MSP library.}

\item{parseComments}{If \code{TRUE} then comments in the file are parsed to obtain additional fields, such as
\acronym{SMILES}, \code{PubChemCID} and \code{Resolution}. Note that some records specify this data either in the
comments or as a regular field, hence, to ensure that loaded data is most complete it is recommend to set
\code{parseComments=TRUE}.}

\item{prefCalcChemProps}{If \code{TRUE} then calculated chemical properties such as the formula and
\acronym{InChIKey} are preferred over what is already present in the MS library. For efficiency reasons it is
recommended to set this to \code{TRUE}. See the \verb{Validating and calculating chemical properties} section for
more details.}

\item{neutralChemProps}{If \code{TRUE} then the neutral form of the molecule is considered to calculate
\acronym{SMILES}, formulae etc. Enabling this may improve feature matching when considering common adducts
(\emph{e.g.} \code{[M+H]+}, \code{[M-H]-}). See the \verb{Validating and calculating chemical properties} section
for more details.}

\item{potAdducts, potAdductsLib}{If and how missing adducts (\code{Precursor_type} data) are guessed,
  \code{potAdducts} should be either: \itemize{

  \item \code{FALSE}: do not perform adduct guessing.

  \item \code{TRUE}: guesses adducts based on a common set of known adducts (currently based on
  \code{\link{GenFormAdducts}} and \code{\link{MetFragAdducts}}). If \code{potAdductsLib} is \code{TRUE} then also
  any adducts specified in the library are used.

  \item A \code{list} with \code{\link{adduct}} objects or \code{character} vector that can be converted with
  \code{\link{as.adduct}}. Only the specified adducts will be used for guessing missing values.

  }}

\item{absMzDev}{The maximum absolute \emph{m/z} deviation when guessing missing adducts.}

\item{calcSPLASH}{If set to \code{TRUE} then missing \acronym{SPLASH} values will be calculated (see below).}
}
\value{
The loaded data is returned in an \code{\link{MSLibrary}} object.
}
\description{
This function loads, verifies and curates MS library data from MSP files.
}
\details{
This function uses an efficient \code{C++} MSP loader to load MS library data. This function is called when calling \code{loadMSLibrary} with
  \code{algorithm="msp"}.

This function uses \code{C++} with \CRANpkg{Rcpp} to efficiently load and parse MSP files, and is mainly
  optimized for loading the \file{.msp} files from \href{https://massbank.eu/MassBank/}{MassBank EU} and
  \href{https://mona.fiehnlab.ucdavis.edu/}{MoNA}. Files from other sources may also work, any feedback on this is
  welcome!
}
\note{
The mass spectrum parser currently only supports space separated entries (MSP formerly also allows other
  formats).
}
\section{Automatic curation of library data}{
 Several strategies are applied to automatically verify and improve
  library data. This is important, since library records may have inconsistent or erroneous data, which makes them
  unsuitable in automated workflows such as compounds annotation with \code{\link{generateCompoundsLibrary}}.

  The loaded library data is post-treated as follows: \itemize{

  \item The \code{DB#} field is renamed to \code{DB_ID} to improve compatibility with \R column names.
  
  \item Synonyms (\code{Synon} fields) are merged together, mainly to save memory usage.

  \item Inconsistently formatted \code{NA} data (\emph{e.g.} \code{"n/a"}, \code{"N/A"} or empty strings) are set to
  regular \R \code{NA} values.

  \item The case of record field names are made consistent.

  \item The \code{Formula} and \code{ExactMass} fields are renamed to \code{formula} and \code{neutralMass},
  respectively. This is for consistency with other data generated with \pkg{patRoon}.

  \item \code{character} field data is trimmed from leading/trailing whitespace.

  \item Mass data is verified to be properly numeric, and set to \code{NA} otherwise.

  \item The format of formulae data is made consistent: ionic species (with or without square brackets) or converted
  to a regular formula format.

  \item Chemical identifiers such as \acronym{SMILES} and formulae are verified and missing values are calculated if
  possible. See below for more details.

  \item Shortened data in the \code{Ion_mode} field (\acronym{P}/\acronym{N}) is converted to the long format
  (\code{POSITIVE}/\code{NEGATIVE}).

  \item Many different adduct flavors typically found as \code{Precursor_type} data are converted and normalized to
  the generic textual format used by \pkg{patRoon} (see \code{\link{as.adduct}}).

  \item If \code{potAdducts!=FALSE} then missing or invalid adduct data in \code{Precursor_type} is guessed based on
  the difference between the neutral and ionic mass. If multiple adducts explain the mass difference the result is
  \code{NA}.

  \item Missing ion \emph{m/z} data (\code{PrecursorMZ} field) is calculated from adduct data, if possible.

  \item Missing \href{https://splash.fiehnlab.ucdavis.edu/}{SPLASH} data is calculated with the \pkg{splashR} package
  if \code{calcSPLASH=TRUE}.

  }
}

\section{Validating and calculating chemical properties}{
 Chemical properties such as \acronym{SMILES},
  \acronym{InChIKey} and formula in the MS library are automatically validated and calculated if missing/invalid.

  The internal validation/calculation process performs the following steps: \itemize{

  \item Validation of \acronym{SMILES}, \acronym{InChI}, \acronym{InChIKey} and formula data (if present). Invalid
  entries will be set to \code{NA}.

  \item If \code{neutralChemProps=TRUE} then chemical data (\acronym{SMILES}, formulae etc.) is neutralized by
  (de-)protonation (using the \command{--neutralized} option of \command{OpenBabel}). An additional column
  \code{molNeutralized} is added to mark those molecules that were neutralized. Note that neutralization requires
  either \acronym{SMILES} or \acronym{InChI} data to be available.

  \item The \acronym{SMILES} and \acronym{InChI} data are used to calculate missing or invalid \acronym{SMILES},
  \acronym{InChI}, \acronym{InChIKey} and formula data. If \code{prefCalcChemProps=TRUE} then existing
  \acronym{InChIKey} and formula data is overwritten by calculated values whenever possible.

  \item The chemical formulae which were \emph{not} calculated are verified and normalized. This process may be time
  consuming, and is potentially largely avoided by setting \code{prefCalcChemProps=TRUE}.

  \item Neutral masses are calculated for missing values (\code{prefCalcChemProps=FALSE}) or whenever possible
  (\code{prefCalcChemProps=TRUE}).

  }

  Note that calculation of formulae for molecules that are isotopically labelled is currently only supported for
  deuterium (2H) elements.

  This functionality relies heavily on \href{http://openbabel.org/wiki/Main_Page}{OpenBabel}, please make sure it is
  installed.
}

\references{
\insertRef{Wohlgemuth2016}{patRoon} \cr\cr \insertRef{Ruttkies2016}{patRoon} \cr\cr
  \addCitations{Rcpp}{1} \cr\cr \addCitations{Rcpp}{2} \cr\cr \addCitations{Rcpp}{3}

\insertRef{OBoyle2011}{patRoon}
}
\seealso{
\code{\link{loadMSLibrary}} for more details and other algorithms.

The \code{\link{MSLibrary}} documentation for various methods to post-process the data and
  \code{\link{generateCompoundsLibrary}} for annotation of features with the library data.
}
