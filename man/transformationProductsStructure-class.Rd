% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TP-structure.R, R/TP-CTS.R,
%   R/TP-biotransformer.R, R/TP-library.R
\docType{class}
\name{transformationProductsStructure-class}
\alias{transformationProductsStructure-class}
\alias{transformationProductsStructure}
\alias{convertToMFDB,transformationProductsStructure-method}
\alias{filter,transformationProductsStructure-method}
\alias{plotGraph,transformationProductsStructure-method}
\alias{plotVenn,transformationProductsStructure-method}
\alias{plotUpSet,transformationProductsStructure-method}
\alias{transformationProductsStructureConsensus-class}
\alias{transformationProductsStructureConsensus}
\alias{consensus,transformationProductsStructure-method}
\alias{transformationProductsCTS-class}
\alias{transformationProductsCTS}
\alias{transformationProductsBT-class}
\alias{transformationProductsBT}
\alias{transformationProductsLibrary-class}
\alias{transformationProductsLibrary}
\title{Base transformation products (TP) class with structure information}
\usage{
\S4method{convertToMFDB}{transformationProductsStructure}(TPs, out, includeParents = FALSE)

\S4method{filter}{transformationProductsStructure}(
  obj,
  ...,
  removeParentIsomers = FALSE,
  removeTPIsomers = FALSE,
  removeDuplicates = FALSE,
  minSimilarity = NULL,
  verbose = TRUE,
  negate = FALSE
)

\S4method{plotGraph}{transformationProductsStructure}(
  obj,
  which,
  components = NULL,
  structuresMax = 25,
  prune = TRUE,
  onlyCompletePaths = FALSE
)

\S4method{plotVenn}{transformationProductsStructure}(obj, ..., commonParents = FALSE, labels = NULL, vennArgs = NULL)

\S4method{plotUpSet}{transformationProductsStructure}(
  obj,
  ...,
  commonParents = FALSE,
  labels = NULL,
  nsets = length(list(...)) + 1,
  nintersects = NA,
  upsetArgs = NULL
)

\S4method{consensus}{transformationProductsStructure}(
  obj,
  ...,
  absMinAbundance = NULL,
  relMinAbundance = NULL,
  uniqueFrom = NULL,
  uniqueOuter = FALSE,
  labels = NULL
)
}
\arguments{
\item{out}{The file name of the the output \command{MetFrag} database.}

\item{includeParents}{Set to \code{TRUE} to include the parents in the database.}

\item{obj, TPs}{\code{transformationProductsStructure} derived object to be accessed}

\item{\dots}{For \code{filter}: Further argument passed to the base
  \code{\link[=filter,transformationProducts-method]{filter method}}.

  For \code{plotVenn}, \code{plotUpSet} and \code{consensus}: further (unique) \code{transformationProductsStructure}
  objects.}

\item{removeParentIsomers}{If \code{TRUE} then TPs with an equal formula as their parent (isomers) are removed.}

\item{removeTPIsomers}{If \code{TRUE} then all TPs with equal formula as any sibling TPs (isomers) are removed.
Unlike \code{removeDuplicates}, \emph{all} TP candidates are removed (including the first match). This filter
automatically sets \code{removeDuplicates=TRUE} to avoid complete removal of TPs with equal structure.}

\item{removeDuplicates}{If \code{TRUE} then the TPs of a parent with duplicate structures (\acronym{SMILES}) are
removed. Such duplicates may occur when different transformation pathways yield the same TPs. The first TP
candidate with duplicate structure will be kept.}

\item{minSimilarity}{Minimum structure similarity (\samp{0-1}) that a TP should have relative to its parent. This
data is only available if the \code{calcSims} argument to \code{\link{generateTPs}} was set to \code{TRUE}. May be
useful under the assumption that parents and TPs who have a high structural similarity, also likely have a high
MS/MS spectral similarity (which can be evaluated after componentization with \code{\link{generateComponentsTPs}}.
Any values that are \code{NA} are removed (which only occur when a consensus was made from objects that not all
have similarity information).}

\item{verbose}{If set to \code{FALSE} then no text output is shown.}

\item{negate}{If \code{TRUE} then filters are performed in opposite manner.}

\item{which}{Either a \code{character} or \code{integer} vector with one or more names/indices of the parents to
plot.}

\item{components}{If specified (\emph{i.e.} not \code{NULL}), a \code{\link{componentsTPs}} object that is used for
matching the graph with screening results. The TPs that were found will be marked. See also the \code{prune} and
\code{onlyCompletePaths} arguments.}

\item{structuresMax}{An \code{integer} with the maximum number of structures to plot. Setting a maximum is mainly
done to avoid long times needed to construct the graph.}

\item{prune}{If \code{TRUE} and \code{components} is set, then pathways without \emph{any} detected TPs are not shown
(pruned). See also the \code{onlyCompletePaths} and \code{components} arguments.}

\item{onlyCompletePaths}{If \code{TRUE} and \code{components} is set, then only pathways are shown for which
\emph{all} TPs were detected. See also the \code{prune} and \code{components} arguments.}

\item{commonParents}{Only consider TPs from parents that are common to all compared objects.}

\item{labels}{A \code{character} with names to use for labelling. If \code{NULL} labels are automatically generated.}

\item{vennArgs}{A \code{list} with further arguments passed to \pkg{VennDiagram} plotting functions. Set to
\code{NULL} to ignore.}

\item{nsets, nintersects}{See \code{\link[UpSetR]{upset}}.}

\item{upsetArgs}{A list with any further arguments to be passed to
\code{\link[UpSetR]{upset}}. Set to \code{NULL} to ignore.}

\item{absMinAbundance, relMinAbundance}{Minimum absolute or relative
(\samp{0-1}) abundance across objects for a result to be kept. For
instance, \code{relMinAbundance=0.5} means that a result should be present
in at least half of the number of compared objects. Set to \samp{NULL} to
ignore and keep all results. Limits cannot be set when \code{uniqueFrom} is
not \code{NULL}.}

\item{uniqueFrom}{Set this argument to only retain TPs that are unique
within one or more of the objects for which the consensus is made.
Selection is done by setting the value of \code{uniqueFrom} to a
\code{logical} (values are recycled), \code{numeric} (select by index) or a
\code{character} (as obtained with \code{algorithm(obj)}). For
\code{logical} and \code{numeric} values the order corresponds to the order
of the objects given for the consensus. Set to \code{NULL} to ignore.}

\item{uniqueOuter}{If \code{uniqueFrom} is not \code{NULL} and if
\code{uniqueOuter=TRUE}: only retain data that are also unique between
objects specified in \code{uniqueFrom}.}
}
\value{
\code{filter} returns a filtered \code{transformationProductsStructure} object.

\code{plotGraph} returns the result of \code{\link{visNetwork}}.

\code{plotVenn} (invisibly) returns a list with the following fields: \itemize{
\item \code{gList} the \code{gList} object that was returned by
  the utilized \pkg{\link{VennDiagram}} plotting function.
\item \code{areas} The total area for each plotted group.
\item \code{intersectionCounts} The number of intersections between groups.
}

The order for the \code{areas} and \code{intersectionCounts} fields is the same as the parameter order
from the used plotting function (see \emph{e.g.} \code{\link{draw.pairwise.venn}} and
\code{\link{draw.triple.venn}}).

\code{consensus} returns a \code{transformationProductsStructure} object that is produced by merging results
  from multiple \code{transformationProductsStructure} objects.
}
\description{
Holds information for all TPs for a set of parents, including structural information.
}
\details{
This (virtual) class is derived from the \code{\link{transformationProducts}} base class, please see its
documentation for more details. Objects from this class are returned by \link[=generateTPs]{TP generators}. More
specifically, algorithms that works with chemical structures (\emph{e.g.} \code{biotransformer}), uses this class to
store their results. The methods defined for this class extend the functionality for the base
\code{\link{transformationProducts}} class.
}
\section{Methods (by generic)}{
\itemize{
\item \code{convertToMFDB(transformationProductsStructure)}: Exports this object as a \file{.csv} file that can be used as a \command{MetFrag} local
database. Any duplicate TPs (formed by different pathways or parents) will be merged based on their
\acronym{InChIKey}.

\item \code{filter(transformationProductsStructure)}: Performs rule-based filtering. Useful to simplify and clean-up the data.

\item \code{plotGraph(transformationProductsStructure)}: Plots an interactive hierarchy graph of the transformation products. The
resulting graph can be browsed interactively and allows exploration of the different TP formation pathways.
Furthermore, results from \link[=generateComponentsTPs]{TP componentization} can be used to match the hierarchy
with screening results. The graph is rendered with \pkg{\link{visNetwork}}.

\item \code{plotVenn(transformationProductsStructure)}: plots a Venn diagram (using \pkg{\link{VennDiagram}}) outlining unique and shared
candidates of up to five different \code{featureAnnotations} objects.

\item \code{plotUpSet(transformationProductsStructure)}: Plots an UpSet diagram (using the \code{\link[UpSetR]{upset}} function)
outlining unique and shared TPs between different \code{transformationProductsStructure} objects.

\item \code{consensus(transformationProductsStructure)}: Generates a consensus from different
\code{transformationProductsStructure} objects. Currently this removes any hierarchical data, and all TPs are
considered to originate from the same (original) parent.

}}
\note{
\code{consensus}: If the \code{retDir} values differs between matched TPs it will be set to \samp{0}. If
  structure similarity data is available (\emph{i.e.} \code{calcSims=TRUE} to \code{generateTPs}) then the mean
  similarity is calculated.
}
\section{Comparison between objects}{
 The methods that compare different objects (\emph{e.g.} \code{plotVenn} and
  \code{consensus}) use the \acronym{InChIKey} to match TPs between objects. Moreover, the parents between objects
  are matched by their name. Hence, it is \emph{crucial} that the input parents to \code{\link{generateTPs}}
  (\emph{i.e.} the \code{parents} argument) are named equally.
}

\section{S4 class hierarchy}{
 \itemize{   \item{\code{\link{transformationProducts}}}   \itemize{     \item{\strong{\code{\link{transformationProductsStructure}}}}     \itemize{       \item{\code{\link{transformationProductsStructureConsensus}}}       \item{\code{\link{transformationProductsCTS}}}       \item{\code{\link{transformationProductsBT}}}       \item{\code{\link{transformationProductsLibrary}}}     }   } }
}

\references{
\insertRef{Conway2017}{patRoon} \cr\cr \insertRef{Lex2014}{patRoon}
}
\seealso{
The base class \code{\link{transformationProducts}} for more relevant methods and \code{\link{generateTPs}}
}
